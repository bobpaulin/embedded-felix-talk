<project name="soar-soar2d" default="build" basedir="." xmlns:sonar="antlib:org.sonar.ant">

	<property name="manifest.classpath" value="java/stopwatch-0.4-with-deps.jar java/commons-logging-1.1.1.jar java/log4j-1.2.15.jar java/soar-smljava.jar java/soar-debugger.jar java/swt.jar java/sml.jar" />
	<property name="jar.main.class" value="edu.umich.soar.gridmap2d.Gridmap2D" />
      
	<condition property="is_windows">
		<os family="windows" />
	</condition>

	<property name="src" location="src/main/java" />
	<property name="lib" location="lib" />
	<property name="doc" location="doc" />

	<property name="target" location="target" />
	<property name="target.classes" location="${target}/classes" />
	<property name="main.resources" location="src/main/resources" />

	<property name="java.source.level" value="1.7"/>
	<property name="java.target.level" value="1.7"/>
	
	<property name="jar.name" value="Eaters_TankSoar.jar"/>

	<property name="manifest.classpath" value=""/>

	<property name="doc.packagenames" value="edu.umich.soar.*"/>
	<property name="doc.sourcepath" location="${src}"/>
	<property name="doc.excludepackagenames" value="edu.umich.demos.*"/>
	<property name="doc.destdir" location="${doc}/${ant.project.name}/api"/>
	<property name="doc.windowtitle" value="${ant.project.name} ${version}"/>
	
	<!-- Sonar -->
		<!-- Define the SonarQube project properties -->
		<property name="sonar.projectKey" value="edu.umich.soar.gridmap2d:SoarTankEaters" />
		<property name="sonar.projectName" value="Soar Tank Eaters Game" />
		<property name="sonar.projectVersion" value="1.0" />
		<property name="sonar.branch" value="embedded-felix"/>
		<property name="sonar.language" value="java" />
		<property name="sonar.sources" value="src/main/java" />
		<property name="sonar.tests" value="src/test/java" />
		<property name="sonar.libraries" value="lib/*.jar" />
		<property name="sonar.binaries" value="${target.classes}" />


	<target name="init" >
		<mkdir dir="${target}" />
		<mkdir dir="${target.classes}" />
		<path id="compile.libs">
			<fileset dir="lib">
				<include name="*.jar" />
			</fileset>
		</path>
	</target>

	<target name="compile" depends="init">
		<javac destdir="${target.classes}" debug="on" optimize="on" target="${java.target.level}" source="${java.source.level}">
			<src path="${src}" />
			<classpath refid="compile.libs"/>
		</javac>

		<copy todir="${target.classes}">
			<fileset dir="${main.resources}">
				<exclude name="**/.svn"/>
			</fileset>
		</copy>
	</target>

	<target name="jar" depends="compile">
		<tstamp />
		<jar destfile="${jar.name}">
			<fileset dir="${target.classes}"/>
			<manifest>
				<attribute name="Title" value="${ant.project.name} ${version}" />
				<attribute name="Vendor" value="${manifest.vendor}" />
				<attribute name="Date" value="${TODAY} ${TSTAMP}" />
				<attribute name="Version" value="${version}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Copyright" value="${copyright}" />
				<attribute name="Main-Class" value="${jar.main.class}" />
				<attribute name="Class-Path" value=". ${manifest.classpath}" />
			</manifest>
		</jar>
			
	</target>

	<target name="clean">
		<delete dir="${target}" />
		<delete file="${jar.name}" />
	</target>

	<target name="doc" depends="init" description="Generate API documentation">
		<javadoc packagenames="${doc.packagenames}"
			sourcepath="${src}"
			classpathref="compile.libs"
			excludepackagenames="${doc.excludepackagenames}"
			defaultexcludes="yes"
			destdir="${doc.destdir}"
			author="true"
			version="true"
			use="true"
			windowtitle="${doc.windowtitle}">
			<doctitle><![CDATA[<h1><a href="http://sitemaker.umich.edu/soar">Soar</a> ${version}</h1>]]></doctitle>
			<bottom><![CDATA[<i>${copyright}</i>]]></bottom>
		</javadoc>
	</target>

	<target name="swt" if="is_windows">
		<exec dir="lib" executable="cmd">
			<arg value="/c" />
			<arg value="fetchswt.bat" />
		</exec>
	</target>

	<target name="build" depends="swt,jar" />
	
	<!-- Define the SonarQube target -->
		<target name="sonar">
		    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
		        <!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
		        <classpath path="path/to/sonar/ant/task/lib/sonar-ant-task-*.jar" />
		    </taskdef>
		 
		    <!-- Execute the SonarQube analysis -->
		    <sonar:sonar />
		</target>

</project>

